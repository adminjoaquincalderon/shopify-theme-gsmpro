    <button
            type="button"
            class="popup-product-shipping-calculator-modal-button button button--primary"
            onclick="modalProductShippingCalculator.open()"
    >
        <span>Ver costo de envío</span>
    </button>

<link rel="stylesheet" type="text/css" href="https://prod-old.haciendola.dev/frontend/static/lib/css/tingle.min.css" />
<script src="https://prod-old.haciendola.dev/frontend/static/lib/js/tingle.min.js"></script>

<style>
    #provincesInput,
    #citiesInput {
        border: 1px solid #dcdcdc;
    }

    .popup-product-shipping-calculator-wrapper {
    }

    .popup-product-shipping-calculator-modal-button {
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .hidden {
        visibility: hidden;
    }

    .tarificador-product-wrapper {
        display: flex;
        flex-direction: column;
    }

    .tingle-modal:before {
        backdrop-filter: unset !important;
    }

    #shippingEstimatePrice div:nth-child(2) {
        color: green;
        font-weight: bold;
    }
  
  button.product-form__add-button {
    margin-bottom: 10px;
}
</style>

<script>
    window.HACIENDOLA = window.HACIENDOLA || {};
    window.HACIENDOLA.TARIFICADOR = window.HACIENDOLA.TARIFICADOR || {};
    window.HACIENDOLA.TARIFICADOR.shopUrl = '{{shop.permanent_domain}}';
    window.HACIENDOLA.TARIFICADOR.variantId = '{{variant.id}}';
    window.HACIENDOLA.TARIFICADOR.regionsWithCommunes = [];
    window.HACIENDOLA.TARIFICADOR.lastRates = [];
    window.HACIENDOLA.TARIFICADOR.cartCookie = '';
    window.HACIENDOLA.TARIFICADOR.ignoredRatesCode = ['BLX_normal'];
    window.HACIENDOLA.TARIFICADOR.printLastRates = () => console.log(window.HACIENDOLA.TARIFICADOR.lastRates);

    const modalProductShippingCalculator = new tingle.modal({
        footer: true,
        stickyFooter: false,
        closeMethods: ['overlay', 'button', 'escape'],
        closeLabel: 'Cerrar',
    });

    modalProductShippingCalculator.setContent(`
        <div class="modal__header">
            <h2 style="text-align: center">
                Cálculo de envío
            </h2>
            <button
                style="height: unset; position: absolute; top: 0; right: 0;"
                aria-label="Close modal"
                onclick="modalProductShippingCalculator.close()"
            >
                <svg viewBox="0 0 10 10" style="height: 20px;" xmlns="http://www.w3.org/2000/svg"><path d="M.3 9.7c.2.2.4.3.7.3.3 0 .5-.1.7-.3L5 6.4l3.3 3.3c.2.2.5.3.7.3.2 0 .5-.1.7-.3.4-.4.4-1 0-1.4L6.4 5l3.3-3.3c.4-.4.4-1 0-1.4-.4-.4-1-.4-1.4 0L5 3.6 1.7.3C1.3-.1.7-.1.3.3c-.4.4-.4 1 0 1.4L3.6 5 .3 8.3c-.4.4-.4 1 0 1.4z" fill="#fff" fill-rule="nonzero"></path></svg>
            </button>
        </div>
        <div>
            <div class="tarificador-product-wrapper">
                <select style="margin: 10px 0px; padding: 10px 0px;" id="provincesInput">
                    <option value="">Cargando...</option>
                </select>
                <select style="margin: 10px 0px; padding: 10px 0px;" id="citiesInput">
                    <option value="">Debe seleccionar una región</option>
                </select>

                <div id="shippingEstimatePrice"></div>
            </div>
        </div>`);
    modalProductShippingCalculator.setFooterContent(
        '<small>El costo de envío contempla sólo el envío de este producto</small>'
    );

    // FUNCIONES

    number_format = (amount, decimals) => {
        amount += '';
        amount = parseFloat(amount.replace(/[^0-9\.]/g, ''));
        decimals = decimals || 0;
        if (isNaN(amount) || amount === 0) return parseFloat(0).toFixed(decimals);
        amount = '' + amount.toFixed(decimals);
        const amount_parts = amount.split('.'),
            regexp = /(\d+)(\d{3})/;
        while (regexp.test(amount_parts[0])) amount_parts[0] = amount_parts[0].replace(regexp, '$1' + '.' + '$2');
        return amount_parts.join('.');
    };

    regionSelectChangeHandler = () => {
        const comunasSelect = document.getElementById('citiesInput');
        const selectedRegionShopifyCode = document.getElementById('provincesInput').value;
        document.getElementById('shippingEstimatePrice').innerHTML = '';
        comunasSelect.innerHTML = '';
        const selectedRegion = window.HACIENDOLA.TARIFICADOR.regionsWithCommunes.find(
            (x) => x.regionShopifyCode === selectedRegionShopifyCode
        );
        let htmlCommunes = '<option value="0">Seleccione comuna</option>';
        selectedRegion.communes.forEach(
            (x) => (htmlCommunes += '<option value=' + x.id + '>' + x.communeName + '</option>')
        );
        comunasSelect.innerHTML = htmlCommunes;
        comunasSelect.classList.remove('hidden');
    };

    /* get cookie by name */
    const getCookie = function (name) {
        const value = '; ' + document.cookie;
        const parts = value.split('; ' + name + '=');
        if (parts.length == 2) return parts.pop().split(';').shift();
    };

    /* update the cart cookie value */
    const updateCartCookie = function (a) {
        const date = new Date();
        date.setTime(date.getTime() + 14 * 86400000);
        const expires = '; expires=' + date.toGMTString();
        document.cookie = 'cart=' + a + expires + '; path=/';
    };

    /* reset the cart cookie value */
    const resetCartCookie = function () {
        updateCartCookie(window.HACIENDOLA.TARIFICADOR.cartCookie);
    };

    /* get the rates */
    const getRates = function (variantId) {
        /* add whatever sanity checks you need in addition to the one below */
        if (typeof variantId === 'undefined') {
            return;
        }

        /* the main quantity element */
        const productQuantity = document.getElementById('Quantity');

        const quantity = 1;
        // const quantity = productQuantity ? parseInt(productQuantity.value):1;
        const addData = {
            id: variantId,
            quantity: quantity,
        };

        fetch('/cart/add.js', {
            body: JSON.stringify(addData),
            credentials: 'same-origin',
            headers: {
                'Content-Type': 'application/json',
                'X-Requested-With': 'xmlhttprequest' /* XMLHttpRequest is ok too, it's case insensitive */,
            },
            method: 'POST',
        })
            .then(function (response) {
                return response.json();
            })
            .then(function (json) {
                /* we have JSON */
                /* Change the cookie value back to what it was */
                const cityInput = document.getElementById('citiesInput');
                const cityName = cityInput.options[cityInput.selectedIndex].text;
                const selectedRegionShopifyCode = document.getElementById('provincesInput').value;
				fetch(
					`/cart/shipping_rates.json?shipping_address[city]=${cityName}&shipping_address[country]=Chile&shipping_address[province]=${selectedRegionShopifyCode}&shipping_address[zip]=CL`
				)
				.then((res) => res.json())
				.then((res) => {
					console.log(res);
					if (res.error) {
						document.getElementById('shippingEstimatePrice').innerHTML =
							'<p style="margin: 0; font-weight: bold;">' + res.error[0] + '</p>';
						return;
					}
					const rates = res.shipping_rates;
					window.HACIENDOLA.TARIFICADOR.lastRates = rates;
					let finalHtml = '';
					if (rates.length === 0) {
					} else {
						finalHtml = '<p style="margin: 0; font-weight: bold;">Tarifas de envío disponibles: </p>';
						rates.forEach((rate) => {
							const ignored =
								window.HACIENDOLA.TARIFICADOR.ignoredRatesCode.findIndex((x) => x === rate.code) !==
								-1;
							if (!ignored) {
								finalHtml += `
									<div style="display: flex; justify-content: space-between;">
										<p style="margin:0">${rate.name}</p>
										<p style="margin:0">$${number_format(rate.price)}</p>
									</div>
								`;
							}
						});
					}
					document.getElementById('shippingEstimatePrice').innerHTML = finalHtml;
					resetCartCookie();
				})
				.catch(function (err) {
					resetCartCookie();
					shippingMessage.innerHTML = '';
				});
            })
            .catch(function (err) {
                /* uh oh, we have error. */
                console.error(err);
                resetCartCookie();
            });
    };

    communaSelectChangeHandler = () => {
        window.HACIENDOLA.TARIFICADOR.cartCookie = getCookie('cart');
        var tempCookieValue = tempCookieValue || 'temp-cart-cookie___' + Date.now();
        var fakeCookieValue = fakeCookieValue || 'fake-cart-cookie___' + Date.now();

        /* if not found, make a new temp cookie */
        if (!window.HACIENDOLA.TARIFICADOR.cartCookie) {
            console.log('no cookie found');
            updateCartCookie(tempCookieValue);
            window.HACIENDOLA.TARIFICADOR.cartCookie = getCookie('cart');
        } else {
            console.log('cookie found');
        }

        /* if found but has a weird length, bail */
        if (window.HACIENDOLA.TARIFICADOR.cartCookie.length < 32) {
            console.log('cart ID not valid');
            return;
        }

        /* Change the cookie value to a new 32 character value */
        updateCartCookie(fakeCookieValue);

        getRates(parseInt(window.HACIENDOLA.TARIFICADOR.variantId));
    };

    // FIN FUNCIONES

    document.getElementById('citiesInput').addEventListener('change', communaSelectChangeHandler);

    document.getElementById('provincesInput').addEventListener('change', regionSelectChangeHandler);

    fetch(
        `https://prod.haciendola.dev/backend/tarificador/api/regions/getShopEnabledRegions/${window.HACIENDOLA.TARIFICADOR.shopUrl}`
    )
        .then(function (response) {
            return response.json();
        })
        .then((result) => {
            window.HACIENDOLA.TARIFICADOR.regionsWithCommunes = result;
            const htmlRegions = result.reduce(
                (acc, region) => acc + '<option value=' + region.regionShopifyCode + '>' + region.regionName + '</option>',
                '<option value="0">Seleccione región</option>'
            );
            document.getElementById('provincesInput').innerHTML = htmlRegions;
            if (result.length === 1) {
                document.getElementById('provincesInput').value = result[0].regionShopifyCode;
                document.getElementById('provincesInput').disabled = true;
                regionSelectChangeHandler();
            }
            document.getElementById('provincesInput').classList.remove('hidden');
        });
</script>
